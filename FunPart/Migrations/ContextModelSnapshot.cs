// <auto-generated />
using System;
using FunPart;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FunPart.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FunPart.Entities.TaskCategories", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("TasksId")
                        .HasColumnType("integer");

                    b.HasKey("Name")
                        .HasName("PK_dbo.TaskCategories");

                    b.ToTable("TaskCategories", (string)null);
                });

            modelBuilder.Entity("FunPart.Entities.Tasks", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("TaskCategoryName")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Tasks");

                    b.HasIndex("TaskCategoryName");

                    b.HasIndex("UserName");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("FunPart.Entities.Users", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("TasksId")
                        .HasColumnType("integer");

                    b.HasKey("Name")
                        .HasName("PK_dbo.Users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("FunPart.Entities.Tasks", b =>
                {
                    b.HasOne("FunPart.Entities.TaskCategories", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryName")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FunPart.Entities.Users", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TaskCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FunPart.Entities.TaskCategories", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("FunPart.Entities.Users", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
